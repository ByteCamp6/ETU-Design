@use "sass:map";
@use "mixins/mixins" as *;
@use "mixins/function" as *;
@use "mixins/_var.scss" as *;
@use "var" as *;
@use "mixins/config" as *;

$dropdown-item-divided-margin: () !default;
$dropdown-item-divided-margin: map.merge(
  (
    "large": 8px 0,
    "default": 6px 0,
    "small": 4px 0,
  ),
  $dropdown-item-divided-margin
);
@include b(dropdown-item) {
  @include set-css-var-value(
    ("dropdownItem", "bg-color"),
    getRootCssVar("color", "primary", "light", "hover")
  );
  @include set-css-var-value(
    ("dropdownItem", "disabled-text-color"),
    getRootCssVar("color", "info", "disabled")
  );
}
@include b(dropdown) {
  @include set-css-var-value(
    ("dropdown", "text-color"),
    getRootCssVar("color", "primary")
  );
}

@include b(dropdown) {
  color: getCssVar("dropdown", "text-color");
  cursor: pointer;
}
@include b(dropdown-item) {
  &:hover {
    background-color: getCssVar("dropdownItem", "bg-color");
    color: rgba(var(--color-blue-6), 1);
    cursor: pointer;
  }
  @include when(disabled) {
    background-color: white;
    color: getCssVar("dropdownItem", "disabled-text-color");
    cursor: not-allowed;
  }
  @include m(divided) {
    border-top: 1px solid #ccc;
    margin: map.get($dropdown-item-divided-margin, "default");
    height: 0;
  }
  list-style: none;
  padding: 3px 15px;
}
@include b(dropdown-menu) {
  padding-inline-start: 0 !important;
}
