@use 'sass:map';

@use 'config';
@use 'function' as *;

// 为css变量设置值
// @include set-css-var-value(('color', 'primary'), red); => --etu-color-primary: red;
@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

// 为css变量设置值，但是传入的是一个map中的一个值
// @include set-css-var-type('color', 'primary', $map); => --etu-color-primary: #{map.get($map, 'primary')};
@mixin set-css-var-type($name, $type, $variables) {
  #{getCssVarName($name, $type)}: #{map.get($variables, $type)};
}

// 为css变量设置值，但是传入的是一个map，map里存的是样式声明
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    #{getCssVarName($name, $attribute)}: #{$value};
  }
}

// 通过现有的css变量，为css变量设置值
// @include css-var-from-global(('button', 'text-color'), ('color', 'primary')) => --etu-button-text-color: var(--etu-color-primary);
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
